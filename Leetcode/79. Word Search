class Solution:
    def exist(self, board: List[List[str]], word: str) -> bool:
        if word == "":
            return False
        
        for i in range(len(board)):
            for j in range(len(board[0])):
                if board[i][j] == word[0] and self.dfs(board, word, i, j, 0):
                    return True
                
        return False
    
    def dfs(self, board, word, i, j, n):
        if n == len(word):
            return True
        
        if i < 0 or j < 0 or i >= len(board) or j >= len(board[0]) or board[i][j] != word[n]:
            return False
        
        board[i][j] = '0'
        
        status = self.dfs(board, word, i + 1, j, n + 1) or self.dfs(board, word, i - 1, j, n + 1) or self.dfs(board, word, i, j + 1, n + 1) or self.dfs(board, word, i, j - 1, n + 1)
        
        board[i][j] = word[n]
        
        return status
